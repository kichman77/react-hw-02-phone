{"version":3,"sources":["components/Form/Form.js","components/ContactList/ContactList.js","components/Filter/Filter.js","components/PhoneBook/PhoneBook.js","components/App.js","index.js"],"names":["initialState","name","number","Form","state","onHandleChange","e","target","value","setState","onHandleSubmit","preventDefault","props","addContact","className","onSubmit","this","onChange","type","Component","ContactList","contacts","deleteContact","map","contact","onClick","id","Filter","filter","PhoneBook","some","item","alert","prev","uuidv4","filterContact","toLowerCase","includes","App","ReactDom","render","StrictMode","document","getElementById"],"mappings":"+UAIMA,G,MAAe,CACnBC,KAAM,GACNC,OAAQ,KAkDKC,E,4MA9CbC,M,eACKJ,G,EAGLK,eAAiB,SAAAC,GAAM,IAAD,EACIA,EAAEC,OAAlBN,EADY,EACZA,KAAMO,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,EAG1BE,eAAiB,SAAAJ,GACfA,EAAEK,iBAEF,EAAKC,MAAMC,WAAX,eAA2B,EAAKT,QAChC,EAAKK,SAAL,eAAmBT,K,uDAGX,IAAD,OAEP,OACE,uBAAMc,UAAU,cAAcC,SAAUC,KAAKN,eAA7C,UACE,yCAEE,uBACEO,SAAUD,KAAKX,eACfJ,KAAK,OACLa,UAAU,YACVN,MAAOQ,KAAKZ,MAAMH,UAGtB,2CAEE,uBACEgB,SAAU,SAAAX,GAAC,OAAI,EAAKD,eAAeC,IACnCL,KAAO,SACPa,UAAU,cACVN,MAAOQ,KAAKZ,MAAMF,YAGtB,wBAAQY,UAAU,UAAUI,KAAK,SAAjC,gC,GAvCWC,aCcJC,G,MApBK,SAAC,GAAiC,IAA/BC,EAA8B,EAA9BA,SAAUC,EAAoB,EAApBA,cAC/B,OACE,oBAAIR,UAAU,cAAd,SACGO,EAASE,KAAI,SAAAC,GAAO,OACnB,qBAAIV,UAAU,cAAd,UACE,mBAAGA,UAAU,OAAb,SAAqBU,EAAQvB,OAC7B,mBAAGa,UAAU,OAAb,SAAqBU,EAAQtB,SAC7B,wBACEY,UAAU,UACVW,QAAS,kBAAMH,EAAcE,EAAQE,KACrCR,KAAK,SAHP,sBAH+BM,EAAQE,W,QCclCC,G,6KAdX,OACE,wBAAOb,UAAU,cAAjB,mCAEE,uBACEA,UAAU,cACVb,KAAK,SACLgB,SAAUD,KAAKJ,MAAMP,eACrBG,MAAOQ,KAAKJ,MAAMgB,gB,GAVPT,cC0DNU,E,4MAvDbzB,MAAQ,CACNiB,SAAU,GACVO,OAAQ,GACR3B,KAAM,GACNC,OAAQ,I,EAEVW,WAAa,SAAAW,GACX,EAAKpB,MAAMiB,SAASS,MAAK,SAAAC,GAAI,OAAIA,EAAK9B,OAASuB,EAAQvB,QACnD+B,MAAM,wBACN,EAAKvB,UAAS,SAAAwB,GAAI,MAAK,CACrBZ,SAAS,GAAD,mBAAMY,EAAKZ,UAAX,4BAA0BG,GAA1B,IAAmCE,GAAIQ,uB,EAIvDZ,cAAgB,SAAAI,GACd,EAAKjB,SAAS,CACZY,SAAU,EAAKjB,MAAMiB,SAASO,QAAO,SAAAJ,GAAO,OAAIA,EAAQE,KAAOA,Q,EAInES,cAAgB,WACd,OAAO,EAAK/B,MAAMiB,SAASO,QAAO,SAAAJ,GAAO,OACvCA,EAAQvB,KAAKmC,cAAcC,SAAS,EAAKjC,MAAMwB,OAAOQ,mB,EAI1D/B,eAAiB,SAAAC,GAAM,IAAD,EACIA,EAAEC,OAAlBN,EADY,EACZA,KAAMO,EADM,EACNA,MACd,EAAKC,SAAL,eAAiBR,EAAOO,K,uDAMxB,OACE,qCACE,oBAAIM,UAAU,QAAd,uBACA,cAAC,EAAD,CAAMD,WAAYG,KAAKH,aACvB,oBAAIC,UAAU,WAAd,sBACA,cAAC,EAAD,CACEc,OAAQZ,KAAKZ,MAAMwB,OACnBvB,eAAgBW,KAAKX,iBAGvB,cAAC,EAAD,CACEgB,SACEL,KAAKZ,MAAMwB,OAASZ,KAAKmB,gBAAkBnB,KAAKZ,MAAMiB,SAExDC,cAAeN,KAAKM,uB,GAjDNH,aCGTmB,E,uKAJX,OAAO,cAAC,EAAD,Q,GAFOnB,aCElBoB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.a0895bc9.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport './Form.css';\nimport PropTypes from 'prop-types';\n\nconst initialState = {\n  name: '',\n  number: '',\n};\n\nclass Form extends Component {\n  state = {\n    ...initialState,\n  };\n\n  onHandleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  onHandleSubmit = e => {\n    e.preventDefault();\n    // console.log({ ...this.state });\n    this.props.addContact({ ...this.state });\n    this.setState({ ...initialState });\n  };\n\n  render() {\n    // console.log(this.props);\n    return (\n      <form className=\"contactForm\" onSubmit={this.onHandleSubmit}>\n        <label>\n          Name\n          <input\n            onChange={this.onHandleChange}\n            name=\"name\"\n            className=\"inputName\"\n            value={this.state.name}\n          />\n        </label>\n        <label>\n          Number\n          <input\n            onChange={e => this.onHandleChange(e)}\n            name = \"number\"\n            className=\"inputNumber\"\n            value={this.state.number}\n          />\n        </label>\n        <button className=\"formBtn\" type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\n\nexport default Form;\n\nForm.propTypes = {\naddContact: PropTypes.func.isRequired\n}","import React from 'react';\nimport './ContactList.css';\nimport PropTypes from 'prop-types';\nconst ContactList = ({ contacts, deleteContact }) => {\n  return (\n    <ul className=\"contactList\">\n      {contacts.map(contact => (\n        <li className=\"contactItem\" key={contact.id}>\n          <p className=\"text\">{contact.name}</p>\n          <p className=\"text\">{contact.number}</p>\n          <button\n            className=\"btn-del\"\n            onClick={() => deleteContact(contact.id)}\n            type=\"button\"\n          >\n            Delete\n          </button>\n        </li>\n      ))}\n    </ul>\n  );\n};\n\nexport default ContactList;\n\nContactList.propTypes = {\n  contacts: PropTypes.array.isRequired,\n  deleteContact: PropTypes.func.isRequired\n};\n","import React, { Component } from 'react';\nimport './Filter.css';\nimport PropTypes from 'prop-types';\n\nclass Filter extends Component {\n  render() {\n    // console.log(this.props);\n    return (\n      <label className=\"filterLable\">\n        Finde contacts by name\n        <input\n          className=\"filterInput\"\n          name=\"filter\"\n          onChange={this.props.onHandleChange}\n          value={this.props.filter}\n        />\n      </label>\n    );\n  }\n}\n\nexport default Filter;\n\nFilter.propTypes = {\n  onHandleChange: PropTypes.func.isRequired,\n  filter: PropTypes.string.isRequired\n};","import React, { Component } from 'react';\nimport Form from '../Form/Form';\nimport ContactList from '../ContactList/ContactList';\nimport { v4 as uuidv4 } from 'uuid';\nimport Filter from '../Filter/Filter';\n\nclass PhoneBook extends Component {\n  state = {\n    contacts: [],\n    filter: '',\n    name: '',\n    number: '',\n  };\n  addContact = contact => {\n    this.state.contacts.some(item => item.name === contact.name)\n      ? alert('This contact in base')\n      : this.setState(prev => ({\n          contacts: [...prev.contacts, { ...contact, id: uuidv4() }],\n        }));\n  };\n\n  deleteContact = id => {\n    this.setState({\n      contacts: this.state.contacts.filter(contact => contact.id !== id),\n    });\n  };\n\n  filterContact = () => {\n    return this.state.contacts.filter(contact =>\n      contact.name.toLowerCase().includes(this.state.filter.toLowerCase()),\n    );\n  };\n\n  onHandleChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n\n  render() {\n    // console.log(this.props);\n    return (\n      <>\n        <h1 className=\"title\">PhoneBook</h1>\n        <Form addContact={this.addContact} />\n        <h2 className=\"subtitle\">Contacts</h2>\n        <Filter\n          filter={this.state.filter}\n          onHandleChange={this.onHandleChange}\n        />\n\n        <ContactList\n          contacts={\n            this.state.filter ? this.filterContact() : this.state.contacts\n          }\n          deleteContact={this.deleteContact}\n        />\n      </>\n    );\n  }\n}\n\nexport default PhoneBook;\n","import React, { Component } from 'react';\nimport PhoneBook from './PhoneBook/PhoneBook';\n\nclass App extends Component {\n  render() {\n    return <PhoneBook />;\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDom from 'react-dom';\nimport './index.css';\nimport App from './components/App';\n\nReactDom.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}